In Java, arrays are objects that store a fixed-size sequential collection of elements of the same type. 
They provide a convenient way to group multiple variables of the same type under a single name.

// Declaring an array of integers
int[] myArray;

// Initializing the array with 5 elements
myArray = new int[5];

// Alternatively, you can combine declaration and initialization
// int[] myArray = new int[5];

// Assigning values to array elements
myArray[0] = 1;
myArray[1] = 2;
myArray[2] = 3;
myArray[3] = 4;
myArray[4] = 5;

// Accessing elements of the array
System.out.println(myArray[0]); // Output: 1
System.out.println(myArray[3]); // Output: 4


In Java, arrays are zero-indexed, meaning the first element is at index 0, the second element is at index 1, and so on.
// Initializing an array with values
int[] anotherArray = {10, 20, 30, 40, 50};


Java also supports multidimensional arrays:
// Declaring and initializing a 2D array
int[][] matrix = {
    {1, 2, 3},
    {4, 5, 6},
    {7, 8, 9}
};

// Accessing elements of a 2D array
System.out.println(matrix[0][0]); // Output: 1
System.out.println(matrix[1][2]); // Output: 6

Arrays in Java provide several methods and properties to manipulate and access their elements, making them powerful tools for storing and processing data.
